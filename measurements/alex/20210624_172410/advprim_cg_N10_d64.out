Running Cache analysis for hdbscan

==861136== Cachegrind, a cache and branch-prediction profiler
==861136== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==861136== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==861136== Command: ./build/bin/hdbscan data/perf_data_d64_10.csv
==861136== 
--861136-- warning: L3 cache found, using its data for the LL simulation.
==861136== 
==861136== I   refs:      80,724,087,962
==861136== I1  misses:            44,682
==861136== LLi misses:             2,465
==861136== I1  miss rate:           0.00%
==861136== LLi miss rate:           0.00%
==861136== 
==861136== D   refs:      22,903,939,516  (22,250,313,155 rd   + 653,626,361 wr)
==861136== D1  misses:     1,349,376,047  ( 1,336,004,339 rd   +  13,371,708 wr)
==861136== LLd misses:        53,616,874  (    46,001,176 rd   +   7,615,698 wr)
==861136== D1  miss rate:            5.9% (           6.0%     +         2.0%  )
==861136== LLd miss rate:            0.2% (           0.2%     +         1.2%  )
==861136== 
==861136== LL refs:        1,349,420,729  ( 1,336,049,021 rd   +  13,371,708 wr)
==861136== LL misses:         53,619,339  (    46,003,641 rd   +   7,615,698 wr)
==861136== LL miss rate:             0.1% (           0.0%     +         1.2%  )

////////////////////////////////////////////////////////////////////////////////////

Running Cache analysis for hdbscan_distvec

==861451== Cachegrind, a cache and branch-prediction profiler
==861451== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==861451== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==861451== Command: ./build/bin/hdbscan_distvec data/perf_data_d64_10.csv
==861451== 
--861451-- warning: L3 cache found, using its data for the LL simulation.
==861451== 
==861451== I   refs:      21,202,488,907
==861451== I1  misses:            42,107
==861451== LLi misses:             2,465
==861451== I1  miss rate:           0.00%
==861451== LLi miss rate:           0.00%
==861451== 
==861451== D   refs:       7,168,562,497  (6,728,412,339 rd   + 440,150,158 wr)
==861451== D1  misses:     1,337,470,939  (1,324,011,695 rd   +  13,459,244 wr)
==861451== LLd misses:        53,652,944  (   46,037,184 rd   +   7,615,760 wr)
==861451== D1  miss rate:           18.7% (         19.7%     +         3.1%  )
==861451== LLd miss rate:            0.7% (          0.7%     +         1.7%  )
==861451== 
==861451== LL refs:        1,337,513,046  (1,324,053,802 rd   +  13,459,244 wr)
==861451== LL misses:         53,655,409  (   46,039,649 rd   +   7,615,760 wr)
==861451== LL miss rate:             0.2% (          0.2%     +         1.7%  )

////////////////////////////////////////////////////////////////////////////////////

Running Cache analysis for hdbscan_distvec_quickvec_primvec

==862238== Cachegrind, a cache and branch-prediction profiler
==862238== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==862238== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==862238== Command: ./build/bin/hdbscan_distvec_quickvec_primvec data/perf_data_d64_10.csv
==862238== 
--862238-- warning: L3 cache found, using its data for the LL simulation.
==862238== 
==862238== I   refs:      31,628,420,198
==862238== I1  misses:            42,081
==862238== LLi misses:             2,440
==862238== I1  miss rate:           0.00%
==862238== LLi miss rate:           0.00%
==862238== 
==862238== D   refs:      10,472,646,722  (9,769,964,739 rd   + 702,681,983 wr)
==862238== D1  misses:     1,337,510,321  (1,324,154,203 rd   +  13,356,118 wr)
==862238== LLd misses:        54,587,621  (   47,025,635 rd   +   7,561,986 wr)
==862238== D1  miss rate:           12.8% (         13.6%     +         1.9%  )
==862238== LLd miss rate:            0.5% (          0.5%     +         1.1%  )
==862238== 
==862238== LL refs:        1,337,552,402  (1,324,196,284 rd   +  13,356,118 wr)
==862238== LL misses:         54,590,061  (   47,028,075 rd   +   7,561,986 wr)
==862238== LL miss rate:             0.1% (          0.1%     +         1.1%  )

////////////////////////////////////////////////////////////////////////////////////

